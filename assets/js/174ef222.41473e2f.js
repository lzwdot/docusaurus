"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[92111],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),f=c(n),d=o,m=f["".concat(s,".").concat(d)]||f[d]||p[d]||a;return n?r.createElement(m,l(l({ref:t},u),{},{components:n})):r.createElement(m,l({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=f;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var c=2;c<a;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},22482:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=n(87462),o=(n(67294),n(3905));const a={title:"\u901a\u8fc7JSON\u6570\u636e\u83b7\u53d6Keys",ID:"27984",date:"2021-08-14 15:56:47",categories:["product","tools"],tags:["product","tools"],authors:["lzw"],slug:"/27984",type:"blog"},l=void 0,i={permalink:"/docusaurus/blog/27984",editUrl:"https://github.com/lzwdot/docusaurus/blog/2021/08-14-27984.md",source:"@site/blog/2021/08-14-27984.md",title:"\u901a\u8fc7JSON\u6570\u636e\u83b7\u53d6Keys",description:"\u8bf7\u8f93\u5165\u6307\u5b9aJSON\u683c\u5f0f\u7684\u6570\u636e",date:"2021-08-14T15:56:47.000Z",formattedDate:"2021\u5e748\u670814\u65e5",tags:[{label:"product",permalink:"/docusaurus/blog/tags/product"},{label:"tools",permalink:"/docusaurus/blog/tags/tools"}],readingTime:1.62,hasTruncateMarker:!0,authors:[{name:"lzw.",title:"\u4e00\u4e2a web \u5f00\u53d1\u8005",url:"https://github.com/lzwdot",imageURL:"https://avatars.githubusercontent.com/u/24477920?v=4",key:"lzw"}],frontMatter:{title:"\u901a\u8fc7JSON\u6570\u636e\u83b7\u53d6Keys",ID:"27984",date:"2021-08-14 15:56:47",categories:["product","tools"],tags:["product","tools"],authors:["lzw"],slug:"/27984",type:"blog"},prevItem:{title:"JS MD5\u52a0\u5bc6",permalink:"/docusaurus/blog/27985"},nextItem:{title:"Web Components \u5165\u95e8",permalink:"/docusaurus/blog/27982"}},s={authorsImageUrls:[void 0]},c=[],u={toc:c};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\u8bf7\u8f93\u5165\u6307\u5b9aJSON\u683c\u5f0f\u7684\u6570\u636e  ")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"\n<div>\n  <textarea ref=\"textarea\" cols=\"30\" rows=\"10\" placeholder=\"JSON \u6570\u636e\"></textarea>\n  <pre><code ref=\"preCode\"></code></pre>\n</div>\n\n<script>\n  import { ref,onMounted} from 'vue'\n  export default {\n    setup() {\n      const textarea = ref(null)\n      const preCode = ref(null)\n\n      // \u9700\u8981\u5728\u751f\u547d\u5468\u671f\u83b7\u53d6\n      onMounted(()=>{\n        function isJson(str) {\n          try {\n            const json = JSON.parse(str)\n            if (typeof json === 'object' && json) {\n              return true\n            }\n            return false\n          } catch (e) {\n            console.error('\u4e0d\u662fjson\u683c\u5f0f\u7684\u6570\u636e')\n            return false\n          }\n        }  \n\n        // \u5f53\u754c\u9762\u6302\u8f7d\u51fa\u6765\u540e\u5c31\u4f1a\u81ea\u52a8\u6267\u884c\n        textarea.value.addEventListener('change', function () {\n          let data = textarea.value.value\n\n          if (!isJson(data)) return\n          data = JSON.parse(data).data\n\n\n          //\u6807\u9898\n          const formTitle = data.title\n          const formSet = data.form[0].set\n\n          console.log(formTitle, formSet)\n\n          let formSetCode = `// ${formTitle}\\n`\n          formSetCode += `const FORM_KEY = '${formSet[0].entityName}__' \\n`\n          formSetCode += 'const formKyes = {\\n'\n          for (let i = 0; i < formSet.length; i++) {\n            if (formSet[i].alias) formSetCode += `   ${formSet[i].alias}:` + ' `${FORM_KEY}' + `${formSet[i].alias}\\` , //${formSet[i].title}\\n`\n          }\n          formSetCode += '} \\n'\n\n          let tableSetCode = ''\n\n          for (let i = 0; i < formSet.length; i++) {\n            if (formSet[i].typeSet.head) {\n              let tableTitle = formSet[i].typeSet.head[0].title\n              let tableSet = formSet[i].typeSet.head[0].set\n\n              console.log(tableTitle, tableSet)\n\n              tableSetCode += `// ${tableTitle} \\n`\n              tableSetCode += `const tFORM_KEY_${tableSet[0].alias} = '${tableSet[0].entityName}__' \\n`\n              tableSetCode += `const tFormKyes_${tableSet[0].alias} = { \\n`\n              for (let i = 0; i < tableSet.length - 1; i++) {\n                if (tableSet[i].alias) tableSetCode += `   ${tableSet[i].alias}:` + ' `${tFORM_KEY_' + `${tableSet[0].alias}` + '}' + `${tableSet[i].alias}\\` , //${tableSet[i].title} \\n`\n              }\n              tableSetCode += '} \\n'\n            }\n          }\n\n          preCode.value.innerHTML = formSetCode + tableSetCode\n        })\n      })\n      return {\n        textarea,\n        preCode\n      }\n    }\n  }\n<\/script>\n\n<style lang=\"scss\" scoped>\ntextarea {\n  width: 99%;\n  max-height: 300px;\n  resize: none;\n}\n\npre {\n  font-family: SFMono-Regular, Consolas, Liberation Mono, Menlo, monospace;\n  padding: 16px;\n  overflow: auto;\n  font-size: 85%;\n  line-height: 1.45;\n  background-color: #f6f8fa;\n  border-radius: 3px;\n  white-space: pre-wrap;\n\n  code {\n    color: #333;\n  }\n}\n</style>\n\n")))}p.isMDXComponent=!0}}]);