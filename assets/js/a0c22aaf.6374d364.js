"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[13011],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var d=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(e);n&&(d=d.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,d)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,d,o=function(e,n){if(null==e)return{};var t,d,o={},l=Object.keys(e);for(d=0;d<l.length;d++)t=l[d],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(d=0;d<l.length;d++)t=l[d],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=d.createContext({}),s=function(e){var n=d.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},u=function(e){var n=s(e.components);return d.createElement(i.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return d.createElement(d.Fragment,{},n)}},p=d.forwardRef((function(e,n){var t=e.components,o=e.mdxType,l=e.originalType,i=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=s(t),m=o,h=p["".concat(i,".").concat(m)]||p[m]||c[m]||l;return t?d.createElement(h,r(r({ref:n},u),{},{components:t})):d.createElement(h,r({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var l=t.length,r=new Array(l);r[0]=p;var a={};for(var i in n)hasOwnProperty.call(n,i)&&(a[i]=n[i]);a.originalType=e,a.mdxType="string"==typeof e?e:o,r[1]=a;for(var s=2;s<l;s++)r[s]=t[s];return d.createElement.apply(null,r)}return d.createElement.apply(null,t)}p.displayName="MDXCreateElement"},37223:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>r,default:()=>c,frontMatter:()=>l,metadata:()=>a,toc:()=>s});var d=t(87462),o=(t(67294),t(3905));const l={title:"Snabbdom \u6e90\u7801 diff \u7b97\u6cd5\u89e3\u8bf4",ID:"27026",date:"2020-11-16 16:06:00",categories:["frame","vuejs-principle"],tags:["frame","vuejs-principle"],authors:["lzw"],slug:"/27026",type:"docs"},r="Snabbdom \u6e90\u7801 diff \u7b97\u6cd5\u89e3\u8bf4",a={unversionedId:"vuejs-principle/27026",id:"vuejs-principle/27026",title:"Snabbdom \u6e90\u7801 diff \u7b97\u6cd5\u89e3\u8bf4",description:"https://github.com/Snabbdom/Snabbdom \u4e0a\u7684\u4e00\u4e2a\u4f8b\u5b50\u4ee3\u7801",source:"@site/docs/vuejs-principle/27026.md",sourceDirName:"vuejs-principle",slug:"/27026",permalink:"/docusaurus/docs/27026",draft:!1,editUrl:"https://github.com/lzwdot/docusaurus/docs/vuejs-principle/27026.md",tags:[{label:"frame",permalink:"/docusaurus/docs/tags/frame"},{label:"vuejs-principle",permalink:"/docusaurus/docs/tags/vuejs-principle"}],version:"current",frontMatter:{title:"Snabbdom \u6e90\u7801 diff \u7b97\u6cd5\u89e3\u8bf4",ID:"27026",date:"2020-11-16 16:06:00",categories:["frame","vuejs-principle"],tags:["frame","vuejs-principle"],authors:["lzw"],slug:"/27026",type:"docs"},sidebar:"tutorialSidebar",previous:{title:"Vue \u865a\u62df DOM \u6838\u5fc3 diff \u7b97\u6cd5",permalink:"/docusaurus/docs/27005"},next:{title:"Vue \u6a21\u677f\u7f16\u8bd1",permalink:"/docusaurus/docs/27051"}},i={},s=[],u={toc:s};function c(e){let{components:n,...l}=e;return(0,o.kt)("wrapper",(0,d.Z)({},u,l,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"snabbdom-\u6e90\u7801-diff-\u7b97\u6cd5\u89e3\u8bf4"},"Snabbdom \u6e90\u7801 diff \u7b97\u6cd5\u89e3\u8bf4"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/Snabbdom/Snabbdom"},"https://github.com/Snabbdom/Snabbdom")," \u4e0a\u7684\u4e00\u4e2a\u4f8b\u5b50\u4ee3\u7801"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"vdom \u6838\u5fc3\u6982\u5ff5\uff1ah\u3001vnode\u3001patch\u3001diff\u3001key\u7b49"),(0,o.kt)("li",{parentName:"ul"},"vdom \u5b58\u5728\u7684\u4ef7\u503c\uff1a\u6570\u636e\u9a71\u52a8\u89c6\u56fe\uff0c\u63a7\u5236 DOM \u64cd\u4f5c")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { init } from 'snabbdom/init'\nimport { classModule } from 'snabbdom/modules/class'\nimport { propsModule } from 'snabbdom/modules/props'\nimport { styleModule } from 'snabbdom/modules/style'\nimport { eventListenersModule } from 'snabbdom/modules/eventlisteners'\nimport { h } from 'snabbdom/h' // helper function for creating vnodes\nvar patch = init([ // Init patch function with chosen modules\n  classModule, // makes it easy to toggle classes\n  propsModule, // for setting properties on DOM elements\n  styleModule, // handles styling on elements with support for animations\n  eventListenersModule, // attaches event listeners\n])\nvar container = document.getElementById('container')\nvar vnode = h('div#container.two.classes', { on: { click: someFn } }, [\n  h('span', { style: { fontWeight: 'bold' } }, 'This is bold'),\n  ' and this is just normal text',\n  h('a', { props: { href: '/foo' } }, 'I'll take you places!')\n])\n// Patch into empty DOM element \u2013 this modifies the DOM as a side effect\npatch(container, vnode)\nvar newVnode = h('div#container.two.classes', { on: { click: anotherEventHandler } }, [\n  h('span', { style: { fontWeight: 'normal', fontStyle: 'italic' } }, 'This is now italic type'),\n  ' and this is still just normal text',\n  h('a', { props: { href: '/bar' } }, 'I'll take you places!')\n])\n// Second `patch` invocation\npatch(vnode, newVnode) // Snabbdom efficiently updates the old view to the new state\n")),(0,o.kt)("p",null,"\u6839\u636e\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u4e00\u8d77\u5148\u770b\u4e0b\u6587\u4ef6 h.ts \u4e2d\u7684 h \u51fd\u6570"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"export function h (sel: any, b?: any, c?: any): VNode {\n  ...\n  // \u8fd4\u56de vnode\n  return vnode(sel, data, children, text, undefined);\n};\n")),(0,o.kt)("p",null,"\u63a5\u7740\u662f snabbdom.ts \u6587\u4ef6\u4e2d\u7684 patch \u51fd\u6570"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"return function patch (oldVnode: VNode | Element, vnode: VNode): VNode {\n    let i: number, elm: Node, parent: Node;\n    const insertedVnodeQueue: VNodeQueue = [];\n    // \u6267\u884c pre hook\n    for (i = 0; i < cbs.pre.length; ++i) cbs.pre[i]();\n    // \u7b2c\u4e00\u4e2a\u53c2\u6570\u4e0d\u662f vnode\n    if (!isVnode(oldVnode)) {\n      // \u521b\u5efa\u4e00\u4e2a\u7a7a\u7684 vnode \uff0c\u5173\u8054\u5230\u8fd9\u4e2a DOM \u5143\u7d20\n      oldVnode = emptyNodeAt(oldVnode);\n    }\n    // \u76f8\u540c\u7684 vnode\uff08key \u548c sel \u90fd\u76f8\u7b49\uff09\n    if (sameVnode(oldVnode, vnode)) {\n      // vnode \u5bf9\u6bd4\n      patchVnode(oldVnode, vnode, insertedVnodeQueue);\n    // \u4e0d\u540c\u7684 vnode \uff0c\u76f4\u63a5\u5220\u6389\u91cd\u5efa\n    } else {\n      elm = oldVnode.elm!;\n      parent = api.parentNode(elm);\n      // \u91cd\u5efa\n      createElm(vnode, insertedVnodeQueue);\n      if (parent !== null) {\n        api.insertBefore(parent, vnode.elm!, api.nextSibling(elm));\n        removeVnodes(parent, [oldVnode], 0, 0);\n      }\n    }\n    for (i = 0; i < insertedVnodeQueue.length; ++i) {\n      insertedVnodeQueue[i].data!.hook!.insert!(insertedVnodeQueue[i]);\n    }\n    for (i = 0; i < cbs.post.length; ++i) cbs.post[i]();\n    return vnode;\n};\n")),(0,o.kt)("p",null,"\u6ce8\u610f\u4e0a\u9762\u7684 sameVnode \u51fd\u6570"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"function sameVnode (vnode1: VNode, vnode2: VNode): boolean {\n  // key \u548c sel \u90fd\u76f8\u7b49\n  // undefined === undefined // true\n  return vnode1.key === vnode2.key && vnode1.sel === vnode2.sel;\n}\n")),(0,o.kt)("p",null,"\u7136\u540e\u5c31\u662f\u5bf9\u6bd4\u7684 patchVnode \u51fd\u6570"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"function patchVnode (oldVnode: VNode, vnode: VNode, insertedVnodeQueue: VNodeQueue) {\n    // \u6267\u884c prepatch hook\n    const hook = vnode.data?.hook;\n    hook?.prepatch?.(oldVnode, vnode);\n    // \u8bbe\u7f6e vnode.elem\n    const elm = vnode.elm = oldVnode.elm!;\n    // \u65e7 children\n    let oldCh = oldVnode.children as VNode[];\n    // \u65b0 children\n    let ch = vnode.children as VNode[];\n    if (oldVnode === vnode) return;\n    // hook \u76f8\u5173\n    if (vnode.data !== undefined) {\n      for (let i = 0; i < cbs.update.length; ++i) cbs.update[i](oldVnode, vnode);\n      vnode.data.hook?.update?.(oldVnode, vnode);\n    }\n    // vnode.text === undefined \uff08vnode.children \u4e00\u822c\u6709\u503c\uff09\n    if (isUndef(vnode.text)) {\n      // \u65b0\u65e7\u90fd\u6709 children\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) updateChildren(elm, oldCh, ch, insertedVnodeQueue);\n      // \u65b0 children \u6709\uff0c\u65e7 children \u65e0 \uff08\u65e7 text \u6709\uff09\n      } else if (isDef(ch)) {\n        // \u6e05\u7a7a text\n        if (isDef(oldVnode.text)) api.setTextContent(elm, '');\n        // \u6dfb\u52a0 children\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      // \u65e7 child \u6709\uff0c\u65b0 child \u65e0\n      } else if (isDef(oldCh)) {\n        // \u79fb\u9664 children\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      // \u65e7 text \u6709\n      } else if (isDef(oldVnode.text)) {\n        api.setTextContent(elm, '');\n      }\n    // else : vnode.text !== undefined \uff08vnode.children \u65e0\u503c\uff09\n    } else if (oldVnode.text !== vnode.text) {\n      // \u79fb\u9664\u65e7 children\n      if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      }\n      // \u8bbe\u7f6e\u65b0 text\n      api.setTextContent(elm, vnode.text!);\n    }\n    hook?.postpatch?.(oldVnode, vnode);\n}\n")),(0,o.kt)("p",null,"\u6700\u540e\u770b\u4e0b\u6bd4\u8f83\u5173\u952e\u7684 updateChildren \u51fd\u6570"),(0,o.kt)("p",null,(0,o.kt)("img",{src:t(68554).Z,width:"1280",height:"576"})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"function updateChildren (parentElm: Node,\n    oldCh: VNode[],\n    newCh: VNode[],\n    insertedVnodeQueue: VNodeQueue) {\n    let oldStartIdx = 0, newStartIdx = 0;\n    let oldEndIdx = oldCh.length - 1;\n    let oldStartVnode = oldCh[0];\n    let oldEndVnode = oldCh[oldEndIdx];\n    let newEndIdx = newCh.length - 1;\n    let newStartVnode = newCh[0];\n    let newEndVnode = newCh[newEndIdx];\n    let oldKeyToIdx: KeyToIndexMap | undefined;\n    let idxInOld: number;\n    let elmToMove: VNode;\n    let before: any;\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (oldStartVnode == null) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode might have been moved left\n      } else if (oldEndVnode == null) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (newStartVnode == null) {\n        newStartVnode = newCh[++newStartIdx];\n      } else if (newEndVnode == null) {\n        newEndVnode = newCh[--newEndIdx];\n      // \u5f00\u59cb\u548c\u5f00\u59cb\u5bf9\u6bd4\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      // \u7ed3\u675f\u548c\u7ed3\u675f\u5bf9\u6bd4\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      // \u5f00\u59cb\u548c\u7ed3\u675f\u5bf9\u6bd4\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        api.insertBefore(parentElm, oldStartVnode.elm!, api.nextSibling(oldEndVnode.elm!));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      // \u7ed3\u675f\u548c\u5f00\u59cb\u5bf9\u6bd4\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        api.insertBefore(parentElm, oldEndVnode.elm!, oldStartVnode.elm!);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      // \u4ee5\u4e0a\u56db\u4e2a\u90fd\u672a\u547d\u4e2d\n      } else {\n        if (oldKeyToIdx === undefined) {\n          oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n        }\n        // \u62ff\u65b0\u8282\u70b9 key \uff0c\u80fd\u5426\u5bf9\u5e94\u4e0a oldCh \u4e2d\u7684\u67d0\u4e2a\u8282\u70b9\u7684 key\n        idxInOld = oldKeyToIdx[newStartVnode.key as string];\n        // \u6ca1\u5bf9\u5e94\u4e0a\n        if (isUndef(idxInOld)) { // New element\n          api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm!);\n          newStartVnode = newCh[++newStartIdx];\n        // \u5bf9\u5e94\u4e0a\u4e86\n        } else {\n          // \u5bf9\u5e94\u4e0a key \u7684\u8282\u70b9\n          elmToMove = oldCh[idxInOld];\n          // sel \u662f\u5426\u76f8\u7b49\uff08sameVnode \u7684\u6761\u4ef6\uff09\n          if (elmToMove.sel !== newStartVnode.sel) {\n            // New element\n            api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm!);\n          // sel \u76f8\u7b49\uff0ckey \u76f8\u7b49\n          } else {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined as any;\n            api.insertBefore(parentElm, elmToMove.elm!, oldStartVnode.elm!);\n          }\n          newStartVnode = newCh[++newStartIdx];\n        }\n      }\n    }\n    if (oldStartIdx <= oldEndIdx || newStartIdx <= newEndIdx) {\n      if (oldStartIdx > oldEndIdx) {\n        before = newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].elm;\n        addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n      } else {\n        removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n      }\n    }\n}\n")),(0,o.kt)("p",null,(0,o.kt)("img",{src:t(77006).Z,width:"1022",height:"918"})),(0,o.kt)("p",null,(0,o.kt)("img",{src:t(23514).Z,width:"1280",height:"515"})))}c.isMDXComponent=!0},23514:(e,n,t)=>{t.d(n,{Z:()=>d});const d=t.p+"assets/images/1061761936-a8d5278c62e064c9f7ccefa4b41a4443.png"},68554:(e,n,t)=>{t.d(n,{Z:()=>d});const d=t.p+"assets/images/603737810-35a3bd5cb6568f6586748e236ff3dc44.png"},77006:(e,n,t)=>{t.d(n,{Z:()=>d});const d=t.p+"assets/images/650364780-af8f5b5dd6ab77433b99ca268c9c9b22.png"}}]);