"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[78290],{3905:(n,e,t)=>{t.d(e,{Zo:()=>l,kt:()=>m});var r=t(67294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function s(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function o(n,e){if(null==n)return{};var t,r,a=function(n,e){if(null==n)return{};var t,r,a={},i=Object.keys(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var p=r.createContext({}),u=function(n){var e=r.useContext(p),t=e;return n&&(t="function"==typeof n?n(e):s(s({},e),n)),t},l=function(n){var e=u(n.components);return r.createElement(p.Provider,{value:e},n.children)},h={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},c=r.forwardRef((function(n,e){var t=n.components,a=n.mdxType,i=n.originalType,p=n.parentName,l=o(n,["components","mdxType","originalType","parentName"]),c=u(t),m=a,d=c["".concat(p,".").concat(m)]||c[m]||h[m]||i;return t?r.createElement(d,s(s({ref:e},l),{},{components:t})):r.createElement(d,s({ref:e},l))}));function m(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var i=t.length,s=new Array(i);s[0]=c;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=n,o.mdxType="string"==typeof n?n:a,s[1]=o;for(var u=2;u<i;u++)s[u]=t[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},1931:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>p,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var r=t(87462),a=(t(67294),t(3905));const i={title:"LeetCode\uff1a347. \u524d K \u4e2a\u9ad8\u9891\u5143\u7d20 !29462",ID:29462,date:"2022-02-14 11:19:01",authors:["lzw"],tags:["program","algorithm"],slug:"/29462",type:"issues"},s=void 0,o={unversionedId:"program/29462",id:"program/29462",title:"LeetCode\uff1a347. \u524d K \u4e2a\u9ad8\u9891\u5143\u7d20 !29462",description:"\u4f7f\u7528\u6700\u5c0f\u5806\u65b9\u6cd5",source:"@site/issues/program/29462.md",sourceDirName:"program",slug:"/29462",permalink:"/docusaurus/issues/29462",draft:!1,tags:[{label:"program",permalink:"/docusaurus/issues/tags/program"},{label:"algorithm",permalink:"/docusaurus/issues/tags/algorithm"}],version:"current",frontMatter:{title:"LeetCode\uff1a347. \u524d K \u4e2a\u9ad8\u9891\u5143\u7d20 !29462",ID:29462,date:"2022-02-14 11:19:01",authors:["lzw"],tags:["program","algorithm"],slug:"/29462",type:"issues"},sidebar:"tutorialSidebar",previous:{title:"LeetCode\uff1a215. \u6570\u7ec4\u4e2d\u7684\u7b2cK\u4e2a\u6700\u5927\u5143\u7d20 !29460",permalink:"/docusaurus/issues/29460"},next:{title:"LeetCode\uff1a23. \u5408\u5e76K\u4e2a\u6392\u5e8f\u94fe\u8868 !29463",permalink:"/docusaurus/issues/29463"}},p={},u=[],l={toc:u};function h(n){let{components:e,...t}=n;return(0,a.kt)("wrapper",(0,r.Z)({},l,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\u4f7f\u7528\u6700\u5c0f\u5806\u65b9\u6cd5"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * JavaScript \u5b9e\u73b0\uff1a\u6700\u5c0f\u5806\u7c7b\n * \u63d2\u5165\n * \u5220\u9664\n * \u8fd4\u56de\u5806\u5934\n * \u8fd4\u56de\u5806\u957f\n */\n\nclass MinHeap {\n    constructor() {\n        this.heap = []\n    }\n\n    swap(i1, i2) {\n        // \u4ea4\u6362\u4e24\u4e2a\u503c\n        const temp = this.heap[i1]\n        this.heap[i1] = this.heap[i2]\n        this.heap[i2] = temp\n    }\n\n    getParentIndex(i) {\n        // \u83b7\u53d6\u7236\u5143\u7d20\u7684\u7d22\u5f15\u503c (index-1)/2\n        // \u7c7b\u4f3c Math.floor((index-1/2))\n        return (i - 1) >> 1\n    }\n\n    getLeftIndex(i) {\n        // \u83b7\u53d6\u5de6\u5143\u7d20\u7684\u7d22\u5f15\u503c i*2+1\n        // \u7c7b\u4f3c Math.floor((index-1/2))\n        return i * 2 + 1\n    }\n\n    getRightIndex(i) {\n        // \u83b7\u53d6\u53f3\u5143\u7d20\u7684\u7d22\u5f15\u503c i*2+2\n        // \u7c7b\u4f3c Math.floor((index-1/2))\n        return i * 2 + 2\n    }\n\n    shiftUp(index) {\n        if (index === 0) return;\n\n        const parentIndex = this.getParentIndex(index)\n\n        // \u8f83\u5c0f\u7684\u503c \u4e0a\u79fb\n        if (this.heap[parentIndex] && this.heap[index].value < this.heap[parentIndex].value) {\n            this.swap(index, parentIndex)\n            this.shiftUp(parentIndex)\n        }\n    }\n\n    shiftDown(index) {\n        const leftIndex = this.getLeftIndex(index)\n        const rightIndex = this.getRightIndex(index)\n\n        // \u8f83\u5927\u7684\u503c \u4e0b\u79fb\n        if (this.heap[leftIndex] && this.heap[index].value > this.heap[leftIndex].value) {\n            this.swap(index, leftIndex)\n            this.shiftDown(leftIndex)\n        }\n\n        // \u8f83\u5927\u7684\u503c \u4e0b\u79fb\n        if (this.heap[rightIndex] && this.heap[index].value > this.heap[rightIndex].value) {\n            this.swap(index, rightIndex)\n            this.shiftDown(rightIndex)\n        }\n    }\n\n    insert(val) {\n        // \u63d2\u5165\u65b0\u503c\n        this.heap.push(val)\n        this.shiftUp(this.heap.length - 1)\n    }\n    pop() {\n        // \u5220\u9664\u503c\uff0c\u7528\u5806\u5c3e\u66ff\u6362\u5806\u9876\n        this.heap[0] = this.heap.pop()\n\n        // \u7136\u540e\u628a\u8f83\u5927\u503c\u4e0b\u79fb\n        this.shiftDown(0)\n    }\n    peek() {\n        // \u8fd4\u56de\u5806\u9876\n        return this.heap[0]\n    }\n\n    size() {\n        // \u8fd4\u56de\u5806\u5bb9\u91cf\n        return this.heap.length\n    }\n}\n\n\n/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number[]}\n */\nvar topKFrequent = function (nums, k) {\n    const map = new Map()\n    const h = new MinHeap()\n\n    // \u8ba1\u7b97\u6bcf\u4e2a\u5143\u7d20\u7684\u4e2a\u6570\n    nums.forEach(n => {\n        map.set(n, map.has(n) ? map.get(n) + 1 : 1)\n    })\n\n    // \u6839\u636e value \u6bd4\u8f83\u5f97\u4e2a\u6570\u6700\u591a\u7684\u5143\u7d20\n    map.forEach((value,key)=>{ \n        h.insert({value,key})\n        if(h.size() > k){\n            h.pop()\n        }\n    })   \n  \n    // \u8f93\u51fa\u5143\u7d20\n    return h.heap.map(n=>n.key)\n};\n")),(0,a.kt)("p",null,"\u62cd\u8111\u888b\u76f4\u63a5\u8f93\u51fa"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number[]}\n */\nvar topKFrequent = function (nums, k) {\n    const map = new Map()\n\n    nums.forEach(n => {\n        map.set(n, map.has(n) ? map.get(n) + 1 : 1)\n    })\n\n    const arr = Array.from(map).sort((a,b)=>b[1]-a[1])\n    \n    return arr.slice(0,k).map(n=>n[0])\n};\n")))}h.isMDXComponent=!0}}]);